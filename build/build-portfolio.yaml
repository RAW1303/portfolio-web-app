name: $(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger:
  batch: true
  branches:
    include:
    - master
    - develop

pr:
  autoCancel: true
  branches:
    include:
    - master
    - develop

variables:
- ${{ if eq(variables.Build.SourceBranch, 'master') }}:
  - group: Prod

jobs:
- job: Build
  pool:
    vmImage: 'ubuntu-18.04'

  steps:
  - script: 'yarn global add @angular/cli'
    displayName: 'Install Angular CLI'

  - script: 'yarn install'
    displayName: 'Resolve Dependencies'

  - script: 'yarn test'
    displayName: 'Test'

  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: 'test/results.xml' 
      testRunTitle: $(Build.BuildNumber)

  - task: PublishCodeCoverageResults@1
    displayName: 'Publish Coverage'
    inputs:
      codeCoverageTool: 'cobertura'
      summaryFileLocation: 'test/coverage.xml'
      failIfCoverageEmpty: true

  - script: 'yarn run build-prod'
    displayName: 'Build'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(System.DefaultWorkingDirectory)/build/scripts' 
      artifactName: 'scripts' 
      parallel: true 
      parallelCount: 8
    displayName: 'Publish Scripts'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(System.DefaultWorkingDirectory)/dist/raw-portfolio' 
      artifactName: 'webApp' 
      parallel: true 
      parallelCount: 8
    displayName: 'Publish Artifacts'
  
- job: Deploy
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  pool:
    vmImage: 'windows-2019'

  steps:
  - checkout: none

  - task: DownloadBuildArtifacts@0
    displayName: 'Download Build Artifacts'
    inputs:
      artifactName: 'webApp'
      downloadPath: $(System.DefaultWorkingDirectory)

  - task: DownloadBuildArtifacts@0
    displayName: 'Download Build Artifacts'
    inputs:
      artifactName: 'scripts'
      downloadPath: $(System.DefaultWorkingDirectory)

  - task: PowerShell@2
    displayName: 'Cleanup Web UI Blob Storage'
    inputs:
      targetType: 'filePath'
      filePath: $(System.DefaultWorkingDirectory)/scripts/CleanBlobStorage.ps1
      arguments: -StorageAccountName '$(WebUiStorageAccountName)' -StorageAccountKey '$(WebUiStorageAccountKey)' -ContainerName '$web' 

  - task: AzureFileCopy@3
    displayName: 'Deploy to Azure Storage'
    inputs:
      sourcePath: '$(System.DefaultWorkingDirectory)/webApp'
      destination: azureBlob
      azureSubscription: '$(SubscriptionId)'
      storageAccountRM: '$(StorageAccountName)'
      containerName: '$web'

  - task: PowerShell@2
    displayName: 'Set Cache-Control For Bundled Resources'
    inputs:
      targetType: 'filePath'
      filePath: $(System.DefaultWorkingDirectory)/scripts/SetBlobCachePolicy.ps1
      arguments: -StorageAccountName '$(WebUiStorageAccountName)' -StorageAccountKey '$(WebUiStorageAccountKey)' -ContainerName '$web' 